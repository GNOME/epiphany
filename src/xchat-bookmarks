<mcatanzaro> OK, so what exactly are you uncertain about... I guess it's not as easy to do with GAction, since the bookmarks list has to be procedurally-generated?
<iulianradu> Exactly
<iulianradu> By loading the epiphany-ui.xml file and appending things to it
<iulianradu> I need to get rid of that file to get rid of GtkUIManager
<mcatanzaro> Hahahaha
<mcatanzaro> Oh wow, that is hacky indeed
<mcatanzaro> OK, let's think about this....
<mcatanzaro> Each GAction has a GVariant parameter that we normally ignore. 
<mcatanzaro> We could use that for bookmarks to contain the URL of the page to load. Hm, but that doesn't answer the question of how to construct the menu.
<mcatanzaro> OK, I think I've got it; this might require a bit of trial and error, though
<mcatanzaro> You'll have to create the GMenu from C code, not from a .ui file (but that's to be expected for a complex menu like this)
<mcatanzaro> When you use g_menu_append https://developer.gnome.org/gio/stable/GMenu.html#GMenuItem, you see the third parameter there is "detailed_action"? It is like signal details: you can use the "detail" to pass an argument to the action name.
<mcatanzaro> E.g. "open_bookmark::"https://gnome.org"" could be the action name (I guess that's the right syntax)
<mcatanzaro> That way you only need to make one GAction, but you'll need to add it to the GMenu n times... (and update the menu each time a new bookmark is added or removed).
<iulianradu> Hmm, ok
<iulianradu> So I should do this on the old code?
<mcatanzaro> ...on the old code?
<iulianradu> You said I should get rid of the old bookmarks code and start anew
<iulianradu> After I get rid of GtkAction/GtkUIManager
<iulianradu> But I can't get rid of those unless I do the changes that you mentioned above
<mcatanzaro> Yeah, do this on the old code. Let's finish the GtkAction/GtkUIManager purge first before deleting the entire bookmarks subsystem. :)