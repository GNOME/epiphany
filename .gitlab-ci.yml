include:
  - project: 'gnome/citemplates'
    ref: 3ecafcc4f06d98a13eb958e86ae0d8c6f388c1aa
    file: '/flatpak/flatpak_ci_initiative.yml'

stages:
  - build

check-code-style:
  stage: .pre
  image: alpine:latest
  before_script:
    - apk update && apk add uncrustify bash python3
  script:
    - bash data/check-code-style

variables:
  BUNDLE: 'epiphany-git.flatpak'

.flatpak-template:
  extends: '.flatpak'
  stage: build
  variables:
    MANIFEST_PATH: 'org.gnome.Epiphany.json'
    RUNTIME_REPO: 'https://nightly.gnome.org/gnome-nightly.flatpakrepo'
    FLATPAK_MODULE: 'epiphany'
    APP_ID: 'org.gnome.Epiphany.Devel'

flatpak:
  #extends: '.flatpak-template'
  stage: build
  variables:
    MESON_ARGS: '-Dprofile=Devel -Dunit_tests=enabled --werror'
  script:
   - flatpak-builder --user --disable-rofiles-fuse --stop-at=${FLATPAK_MODULE} flatpak_app ${MANIFEST_PATH}
    # Make sure to keep this in sync with the Flatpak manifest, all arguments
    # are passed except the config-args because we build it ourselves
    - flatpak build flatpak_app meson --prefix=/app ${MESON_ARGS} _build
    - flatpak build flatpak_app ninja -C _build install
    - |
      flatpak build flatpak_app bash -c \
      'for lang in $(ls /app/share/locale/); do \
        ll=$(echo ${lang} | egrep -o '^[a-z]+'); \
        test ${ll} == en && continue; \
        test -L /app/share/locale/${lang} && continue; \
        mkdir -p /app/share/runtime/locale/${ll}/share; \
        mv /app/share/locale/${lang} /app/share/runtime/locale/${ll}/share/; \
        ln -s ../../share/runtime/locale/${ll}/share/${lang} /app/share/locale; \
      done'
    - |
      flatpak build flatpak_app bash -c \
      "find /app -type f '(' -perm -111 -o -name '*.so*' ')' -print0 | while read -r -d $'\\0' file; do \
        read -n4 hdr < \${file} || continue; \
        if [ \"\$hdr\" != \$(printf \\\\x7fELF) ]; then \
          continue; \
        fi; \
        if objdump -j .gnu_debuglink -s \${file} &> /dev/null; then \
          continue; \
        fi; \
        case \${file} in /app/lib/debug/*) \
            continue ;; \
        esac; \
        debugedit -i --list-file=source-files.part --base-dir=\${PWD} --dest-dir=/app/lib/debug/source//${FLATPAK_MODULE} \${file} &> /dev/null; \
        cat source-files.part >> source-files; \
        realpath=\$(realpath -s --relative-to=/app \${file}); \
        debugfile=/app/lib/debug/\${realpath}.debug; \
        mkdir -p \$(dirname \${debugfile}); \
        objcopy --only-keep-debug --compress-debug-sections \${file} \${debugfile}; \
        chmod 644 \${debugfile}; \
        mode=\$(stat -c 0%a \${file}); \
        [ -w \${file} ] || chmod +w \${file}; \
        strip --remove-section=.comment --remove-section=.note --strip-unneeded --remove-section=.gnu_debugaltlink \${file}; \
        objcopy --add-gnu-debuglink \${debugfile} \${file}; \
        chmod \${mode} \${file}; \
      done; \
      sort -zu < source-files | while read -r -d \$'\\0' source; do \
        dst=/app/lib/debug/source/${FLATPAK_MODULE}/\${source}; \
        src=\${source}; \
        if [ -d \${src} ]; then \
          install -m0755 -d \${dst}; \
          continue; \
        fi; \
        [ -f \${src} ] || continue; \
        install -m0644 -D \${src} \${dst}; \
      done"

    - flatpak-builder --user --disable-rofiles-fuse --finish-only --repo=repo ${BRANCH:+--default-branch=$BRANCH} flatpak_app ${MANIFEST_PATH}
    # Run automatic tests inside the Flatpak env
    - >
      xvfb-run -a -s "-screen 0 1024x768x24"
      flatpak build
      --env=LANG=C.UTF-8
      --env=NO_AT_BRIDGE=1
      ${TEST_BUILD_ARGS}
      flatpak_app
      "/usr/libexec/xdg-desktop-portal && dbus-run-session
      meson test -C _build --no-stdsplit --print-errorlogs ${TEST_RUN_ARGS}"

  except:
    - master

flatpak-master:
  extends: '.flatpak-template'
  stage: build
  variables:
    MESON_ARGS: '-Dtech_preview=true -Dprofile=Devel'
  only:
    - master

flatpak-scanbuild:
  extends: '.flatpak-template'
  stage: .pre
  tags:
    - flatpak
  variables:
    MESON_ARGS: '-Dprofile=Devel -Dunit_tests=enabled --werror'
  image: 'registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:master'
  script:
    - flatpak-builder --user --disable-rofiles-fuse --stop-at=${FLATPAK_MODULE} flatpak_app ${MANIFEST_PATH}
    - flatpak build flatpak_app meson --prefix=/app ${MESON_ARGS} _build
    - flatpak build flatpak_app ninja -C _build scan-build
    - bash -c 'if [[ -n "$(ls -A _build/meson-logs/scanbuild/)" ]]; then echo "Scan build log found, assuming defects exist"; exit 1; fi'
  artifacts:
    when: on_failure
    paths:
      - _build/meson-logs/scanbuild

nightly:
  extends: '.publish_nightly'
  stage: .post
  dependencies: ['flatpak-master']
