include:
  - project: 'gnome/citemplates'
    ref: 3ecafcc4f06d98a13eb958e86ae0d8c6f388c1aa
    file: '/flatpak/flatpak_ci_initiative.yml'

stages:
  - build

check-code-style:
  stage: .pre
  image: alpine:latest
  before_script:
    - apk update && apk add uncrustify bash python3
  script:
    - bash data/check-code-style

variables:
  BUNDLE: 'epiphany-git.flatpak'

.flatpak-template:
  extends: '.flatpak'
  stage: build
  variables:
    MANIFEST_PATH: 'org.gnome.Epiphany.json'
    RUNTIME_REPO: 'https://nightly.gnome.org/gnome-nightly.flatpakrepo'
    FLATPAK_MODULE: 'epiphany'
    APP_ID: 'org.gnome.Epiphany.Devel'

flatpak:
  extends: '.flatpak-template'
  stage: build
  variables:
    MESON_ARGS: '-Dprofile=Devel -Dunit_tests=enabled --werror'
  script:
    - rewrite-flatpak-manifest ${MANIFEST_PATH} ${FLATPAK_MODULE}
    - flatpak-builder --user --disable-rofiles-fuse flatpak_app --repo=repo ${BRANCH:+--default-branch=$BRANCH} ${MANIFEST_PATH}

    # Generate a Flatpak bundle
    - flatpak build-bundle repo ${BUNDLE} --runtime-repo=${RUNTIME_REPO} ${APP_ID} ${BRANCH}
    - tar cf repo.tar repo/

    # Run automatic tests inside the Flatpak env
    # we need to recreate the build directory because cleanup would have deleted build dependencies
    - rm -rf flatpak_app
    - flatpak-builder --user --disable-rofiles-fuse --build-only flatpak_app ${MANIFEST_PATH}
    - flatpak build-finish --socket=x11 --share=network flatpak_app
    - >
      xvfb-run -a -s "-screen 0 1024x768x24"
      flatpak-builder --user --disable-rofiles-fuse --build-shell=${FLATPAK_MODULE} flatpak_app ${MANIFEST_PATH} <<END

      LANG=C.UTF-8
      NO_AT_BRIDGE=1
      dbus-run-session
      /usr/libexec/xdg-desktop-portal
      meson test --no-stdsplit --print-errorlogs ${TEST_RUN_ARGS}

      END

  except:
    - master

flatpak-master:
  extends: '.flatpak-template'
  stage: build
  variables:
    MESON_ARGS: '-Dtech_preview=true -Dprofile=Devel'
  only:
    - master

flatpak-scanbuild:
  extends: '.flatpak-template'
  stage: .pre
  tags:
    - flatpak
  variables:
    MESON_ARGS: '-Dprofile=Devel -Dunit_tests=enabled --werror'
  image: 'registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:master'
  script:
    - flatpak-builder --user --disable-rofiles-fuse --stop-at=${FLATPAK_MODULE} flatpak_app ${MANIFEST_PATH}
    - flatpak build flatpak_app meson --prefix=/app ${MESON_ARGS} _build
    - flatpak build flatpak_app ninja -C _build scan-build
    - bash -c 'if [[ -n "$(ls -A _build/meson-logs/scanbuild/)" ]]; then echo "Scan build log found, assuming defects exist"; exit 1; fi'
  artifacts:
    when: on_failure
    paths:
      - _build/meson-logs/scanbuild

nightly:
  extends: '.publish_nightly'
  stage: .post
  dependencies: ['flatpak-master']
